# Generated by Django 5.2.2 on 2025-08-15 11:14

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DemandeAdhesion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pseudo', models.CharField(max_length=30, unique=True)),
                ('nom_etablissement', models.CharField(max_length=100)),
                ('type_etablissement', models.CharField(choices=[('maquis', 'Maquis'), ('boite', 'Boîte de Nuit')], max_length=10)),
                ('quartier', models.CharField(max_length=100)),
                ('ville', models.CharField(default='Ouagadougou', max_length=100)),
                ('nom_gestionnaire', models.CharField(max_length=50)),
                ('prenom_gestionnaire', models.CharField(max_length=50)),
                ('telephone_gestionnaire', models.CharField(max_length=20)),
                ('email_gestionnaire', models.EmailField(max_length=254)),
                ('date_demande', models.DateTimeField(auto_now_add=True)),
                ('statut', models.CharField(choices=[('en_attente', 'En attente'), ('approuvee', 'Approuvée'), ('rejetee', 'Rejetée')], default='en_attente', max_length=20)),
            ],
            options={
                'verbose_name': "Demande d'adhésion",
                'verbose_name_plural': "Demandes d'adhésion",
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pseudo', models.CharField(max_length=30, unique=True)),
                ('nom', models.CharField(blank=True, max_length=50)),
                ('prenom', models.CharField(blank=True, max_length=50)),
                ('date_inscription', models.DateTimeField(auto_now_add=True)),
                ('actif', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Participant',
                'verbose_name_plural': 'Participants',
            },
        ),
        migrations.CreateModel(
            name='Pari',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cote', models.DecimalField(decimal_places=2, default=2.0, max_digits=4)),
                ('evenement', models.CharField(choices=[('GAIN', 'GAIN'), ('PERTE', 'PERTE')], max_length=6)),
                ('date_pari', models.DateTimeField(auto_now_add=True)),
                ('date_evenement', models.DateField()),
                ('gagne', models.BooleanField(blank=True, null=True, verbose_name='Pari gagné')),
                ('montant_gains', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('resultat_disponible', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soiree.participant')),
            ],
            options={
                'verbose_name': 'Pari',
                'verbose_name_plural': 'Paris',
                'ordering': ['-date_pari'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pseudo', models.CharField(max_length=30, unique=True)),
                ('nom', models.CharField(blank=True, max_length=20)),
                ('prenom', models.CharField(blank=True, max_length=50)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatar', verbose_name='Photo ou avatar')),
                ('tel', models.CharField(max_length=20, unique=True, verbose_name='Numéro téléphone')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('maquis', 'Maquis'), ('boite', 'Boîte de Nuit')], max_length=10)),
                ('localisation', models.CharField(max_length=200)),
                ('adresse', models.TextField()),
                ('telephone', models.CharField(blank=True, max_length=20)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('actif', models.BooleanField(default=True)),
                ('types_boissons_enregistres', models.BooleanField(default=False, help_text='Les types de boissons ont-ils été enregistrés ?')),
                ('derniere_mise_a_jour_boissons', models.DateTimeField(blank=True, null=True)),
                ('proprietaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Établissement',
                'verbose_name_plural': 'Établissements',
            },
        ),
        migrations.AddField(
            model_name='participant',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soiree.service'),
        ),
        migrations.CreateModel(
            name='Gestionnaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pseudo', models.CharField(max_length=30, unique=True)),
                ('nom', models.CharField(blank=True, max_length=20)),
                ('prenom', models.CharField(blank=True, max_length=50)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatar', verbose_name='Photo ou avatar')),
                ('tel', models.CharField(max_length=20, unique=True, verbose_name='Numéro téléphone')),
                ('fonction', models.CharField(choices=[('gerant', 'GERANT'), ('dg', 'DIRIGEANT'), ('animateur', 'ANIMATEUR')], max_length=20)),
                ('mot_de_passe_reinitialise', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soiree.service')),
            ],
        ),
        migrations.CreateModel(
            name='TypeBoisson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categorie', models.CharField(choices=[('champagne', 'Champagne'), ('whisky', 'Whisky'), ('brakina', 'BRAKINA'), ('sobbra', 'SOBBRA'), ('liqueur', 'Liqueur'), ('g_guiness', 'GROSSE GUINNESS'), ('p_guiness', 'PETIT GUINNESS'), ('soft', 'Boisson Non-Alcoolisée'), ('autre', 'Autre')], max_length=20)),
                ('prix_vente', models.DecimalField(decimal_places=2, max_digits=10)),
                ('actif', models.BooleanField(default=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soiree.service')),
            ],
            options={
                'verbose_name': 'Type de boisson',
                'verbose_name_plural': 'Types de boissons',
                'unique_together': {('service', 'categorie')},
            },
        ),
        migrations.CreateModel(
            name='ConsommationParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite', models.PositiveIntegerField()),
                ('prix_unitaire', models.DecimalField(decimal_places=2, max_digits=10)),
                ('montant_total', models.DecimalField(decimal_places=2, max_digits=12)),
                ('date_consommation', models.DateTimeField(auto_now_add=True)),
                ('date_saisie', models.DateTimeField(auto_now_add=True)),
                ('saisi_par', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soiree.gestionnaire')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soiree.participant')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soiree.service')),
                ('type_boisson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soiree.typeboisson')),
            ],
            options={
                'verbose_name': 'Consommation participant',
                'verbose_name_plural': 'Consommations participants',
                'ordering': ['-date_consommation'],
            },
        ),
        migrations.CreateModel(
            name='ClassementQuotidien',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('type_etablissement', models.CharField(choices=[('maquis', 'Maquis'), ('boite', 'Boîte de Nuit')], max_length=10)),
                ('montant_total', models.DecimalField(decimal_places=2, max_digits=12)),
                ('position', models.PositiveIntegerField()),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soiree.participant')),
                ('etablissement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soiree.service')),
            ],
            options={
                'ordering': ['date', 'type_etablissement', 'position'],
                'unique_together': {('date', 'type_etablissement', 'position')},
            },
        ),
        migrations.CreateModel(
            name='ClassementEtablissement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('type_etablissement', models.CharField(choices=[('maquis', 'Maquis'), ('boite', 'Boîte de Nuit')], max_length=10)),
                ('montant_total', models.DecimalField(decimal_places=2, max_digits=12)),
                ('position', models.PositiveIntegerField()),
                ('etablissement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soiree.service')),
            ],
            options={
                'ordering': ['date', 'type_etablissement', 'position'],
                'unique_together': {('date', 'type_etablissement', 'position')},
            },
        ),
        migrations.CreateModel(
            name='Trophee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_trophee', models.CharField(choices=[('sultan_maquis', 'Sultan du Maquis'), ('bouquet_or', "Bouquet d'Or"), ('roi_ventes_maquis', 'Roi des Ventes Maquis'), ('empereur_boite', 'Empereur de la Boîte')], max_length=20)),
                ('date_attribution', models.DateField()),
                ('montant_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField(blank=True)),
                ('photo_gagnant', models.ImageField(blank=True, null=True, upload_to='trophees')),
                ('etablissement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soiree.service')),
                ('gagnant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='soiree.participant')),
            ],
            options={
                'verbose_name': 'Trophée',
                'verbose_name_plural': 'Trophées',
                'ordering': ['-date_attribution'],
                'unique_together': {('type_trophee', 'date_attribution', 'etablissement')},
            },
        ),
    ]
